<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
 	   	http://www.springframework.org/schema/beans
 	   	http://www.springframework.org/schema/beans/spring-beans.xsd
 	   	http://www.springframework.org/schema/mvc
 	   	http://www.springframework.org/schema/mvc/spring-mvc.xsd
 	   	http://www.springframework.org/schema/context
 	   	http://www.springframework.org/schema/context/spring-context.xsd
 	   	http://www.springframework.org/schema/data/jpa
 	   	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
 	   	http://www.springframework.org/schema/tx
 	   	http://www.springframework.org/schema/tx/spring-tx.xsd
 	   ">

	<!-- Show in which package is our Controllers MCV -->
	<context:component-scan base-package="ca.com.navasgroup.springmvc.controllers" />
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView"></property><!-- 
			Classe responsálvel por converter JSP, JSF para HTML -->
	</bean>
	<!-- Bean responsável por informar onde está o arquivo tiles.xml -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"><!-- Carrega as configs do Tiles para o Spring -->
		<property name="definitions"><!-- Arquivo que contem as definicoes do Tiles -->
			<list>
				<value>WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>

	<!-- Bean reponsável por fazer a validacao em cima da validation api e do 
		hibernate-validator -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- Spring Data -->

    <!-- Bean reponsável por fabricar as conexoes para o Hibernate, JPA e SpringData -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/treinawebspringmvc?useTimezone=true&amp;serverTimezone=UTC"></property>
		<property name="username" value="root"></property>
		<property name="password" value="313233"></property>
	</bean>
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan" value="ca.com.navasgroup.springmvc.dominios"></property>
		<property name="jpaVendorAdapter"><!-- Provider JPA -->
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<jpa:repositories base-package="ca.com.navasgroup.springmvc.repositorios"></jpa:repositories>

	<!-- Abilita o suporte a JSR303 no Spring MVC -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<mvc:resources location="/WEB-INF/resources/" mapping="/resources/**"></mvc:resources>

</beans>